<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mô phỏng Điều khiển TV bằng Remote</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            color: white;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 15px;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 15px;
            width: 90%;
            max-width: 800px;
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
            color: #ffcc00;
        }
        
        .subtitle {
            font-size: 1.2rem;
            color: #ccc;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 30px;
            width: 90%;
            max-width: 1200px;
        }
        
        .tv-container {
            flex: 1;
            min-width: 300px;
            max-width: 500px;
            background: #111;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .tv-screen {
            width: 100%;
            aspect-ratio: 16/9;
            background: linear-gradient(45deg, #0f2027, #203a43, #2c5364);
            border-radius: 10px;
            margin-bottom: 20px;
            position: relative;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            border: 5px solid #333;
        }
        
        .tv-content {
            text-align: center;
            padding: 20px;
            z-index: 2;
        }
        
        .channel-display {
            font-size: 5rem;
            font-weight: bold;
            color: white;
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
            margin-bottom: 10px;
        }
        
        .volume-display {
            font-size: 2rem;
            color: #ffcc00;
            margin-bottom: 20px;
        }
        
        .status-display {
            font-size: 1.8rem;
            font-weight: bold;
            padding: 10px 20px;
            border-radius: 30px;
            display: inline-block;
        }
        
        .status-on {
            background: #28a745;
            color: white;
        }
        
        .status-off {
            background: #dc3545;
            color: white;
        }
        
        .tv-info {
            width: 100%;
            background: #222;
            border-radius: 10px;
            padding: 15px;
            margin-top: 10px;
        }
        
        .info-title {
            text-align: center;
            margin-bottom: 10px;
            color: #ffcc00;
            font-size: 1.3rem;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            padding: 5px 0;
            border-bottom: 1px solid #444;
        }
        
        .remote-container {
            flex: 1;
            min-width: 300px;
            max-width: 400px;
            background: #222;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            padding: 25px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .remote-body {
            width: 100%;
            background: #333;
            border-radius: 20px;
            padding: 20px;
            box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.8);
        }
        
        .remote-id {
            text-align: center;
            margin-bottom: 15px;
            color: #ffcc00;
            font-weight: bold;
            background: #444;
            padding: 5px 10px;
            border-radius: 20px;
        }
        
        .power-section {
            display: flex;
            justify-content: center;
            margin-bottom: 25px;
        }
        
        .power-btn {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(145deg, #ff3333, #cc0000);
            border: none;
            color: white;
            font-weight: bold;
            font-size: 1.1rem;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
            transition: all 0.2s;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .power-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.5);
        }
        
        .power-btn:active {
            transform: scale(0.98);
        }
        
        .control-section {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-bottom: 25px;
        }
        
        .control-btn {
            width: 100%;
            height: 60px;
            border-radius: 12px;
            background: linear-gradient(145deg, #444, #333);
            border: none;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            transition: all 0.2s;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .control-btn:hover {
            background: linear-gradient(145deg, #555, #444);
            transform: translateY(-2px);
        }
        
        .control-btn:active {
            transform: translateY(1px);
        }
        
        .channel-btn {
            background: linear-gradient(145deg, #3a7bd5, #00d2ff);
        }
        
        .volume-btn {
            background: linear-gradient(145deg, #11998e, #38ef7d);
        }
        
        .number-section {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
        }
        
        .number-btn {
            width: 100%;
            height: 50px;
            border-radius: 10px;
            background: linear-gradient(145deg, #555, #444);
            border: none;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            cursor: pointer;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);
            transition: all 0.2s;
        }
        
        .number-btn:hover {
            background: linear-gradient(145deg, #666, #555);
            transform: translateY(-2px);
        }
        
        .number-btn:active {
            transform: translateY(1px);
        }
        
        .instructions {
            background: rgba(0, 0, 0, 0.4);
            border-radius: 15px;
            padding: 20px;
            margin-top: 30px;
            width: 90%;
            max-width: 1200px;
        }
        
        .instructions h2 {
            color: #ffcc00;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .scenario {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            margin-top: 15px;
        }
        
        .scenario-step {
            display: flex;
            margin-bottom: 8px;
            padding: 8px;
            border-radius: 5px;
            background: rgba(0, 0, 0, 0.3);
        }
        
        .step-number {
            font-weight: bold;
            margin-right: 10px;
            color: #ffcc00;
            min-width: 25px;
        }
        
        .action-btn {
            background: #ffcc00;
            color: #333;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            font-weight: bold;
            cursor: pointer;
            margin-top: 10px;
            transition: all 0.3s;
        }
        
        .action-btn:hover {
            background: #ffd700;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
        
        .pattern {
            position: absolute;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.05) 0%, transparent 20%),
                radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.05) 0%, transparent 20%);
            z-index: 1;
        }
        
        .no-signal {
            position: absolute;
            font-size: 2rem;
            color: rgba(255, 255, 255, 0.1);
            text-transform: uppercase;
            letter-spacing: 3px;
            z-index: 1;
        }
        
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
                align-items: center;
            }
            
            .tv-container, .remote-container {
                width: 100%;
                max-width: 500px;
            }
        }
    </style>
</head>
<body>
    <header>
        <h1>Điều Khiển TV Từ Xa</h1>
        <p class="subtitle">Mô phỏng chương trình sử dụng Remote để điều khiển TV - Luyện tập OOP trong JavaScript</p>
    </header>
    
    <div class="container">
        <div class="tv-container">
            <h2>Smart TV</h2>
            <div class="tv-screen">
                <div class="pattern"></div>
                <div class="no-signal">no signal</div>
                <div class="tv-content">
                    <div class="channel-display" id="current-channel">1</div>
                    <div class="volume-display">Âm lượng: <span id="current-volume">10</span></div>
                    <div class="status-display status-off" id="tv-status">TẮT</div>
                </div>
            </div>
            <div class="tv-info">
                <div class="info-title">Thông tin TV</div>
                <div class="info-grid">
                    <div class="info-item">
                        <span>Hãng sản xuất:</span>
                        <span>TechMaster</span>
                    </div>
                    <div class="info-item">
                        <span>Model:</span>
                        <span>TV-2023</span>
                    </div>
                    <div class="info-item">
                        <span>Kích thước:</span>
                        <span>55 inch</span>
                    </div>
                    <div class="info-item">
                        <span>Độ phân giải:</span>
                        <span>4K UHD</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="remote-container">
            <h2>Remote Điều Khiển</h2>
            <div class="remote-body">
                <div class="remote-id">Mã Remote: RM-8876</div>
                
                <div class="power-section">
                    <button class="power-btn" id="power-btn">Nguồn</button>
                </div>
                
                <div class="control-section">
                    <button class="control-btn channel-btn" id="channel-up">Kênh ▲</button>
                    <button class="control-btn" id="set-channel">Kênh</button>
                    <button class="control-btn channel-btn" id="channel-down">Kênh ▼</button>
                    
                    <button class="control-btn volume-btn" id="volume-up">Âm Lượng ▲</button>
                    <button class="control-btn" id="mute">Tắt tiếng</button>
                    <button class="control-btn volume-btn" id="volume-down">Âm Lượng ▼</button>
                </div>
                
                <div class="number-section">
                    <button class="number-btn">1</button>
                    <button class="number-btn">2</button>
                    <button class="number-btn">3</button>
                    <button class="number-btn">4</button>
                    <button class="number-btn">5</button>
                    <button class="number-btn">6</button>
                    <button class="number-btn">7</button>
                    <button class="number-btn">8</button>
                    <button class="number-btn">9</button>
                    <button class="number-btn">0</button>
                    <button class="number-btn">+10</button>
                    <button class="number-btn">-10</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="instructions">
        <h2>Kịch bản mô phỏng</h2>
        <div class="scenario">
            <div class="scenario-step">
                <div class="step-number">1.</div>
                <div>Bật TV bằng nút Nguồn trên Remote</div>
            </div>
            <div class="scenario-step">
                <div class="step-number">2.</div>
                <div>Chuyển đến kênh 7 bằng cách nhấn nút số 7</div>
            </div>
            <div class="scenario-step">
                <div class="step-number">3.</div>
                <div>Dùng nút Kênh ▼ để chuyển đến kênh 3</div>
            </div>
            <div class="scenario-step">
                <div class="step-number">4.</div>
                <div>Nhấn nút Âm Lượng ▲ 2 lần để tăng âm lượng lên 2 đơn vị</div>
            </div>
            <div class="scenario-step">
                <div class="step-number">5.</div>
                <div>Dùng nút Nguồn để tắt TV</div>
            </div>
        </div>
        
        <button class="action-btn" id="run-scenario">Chạy Kịch Bản Tự Động</button>
    </div>

    <script>
        // Lớp TV
        class TV {
            constructor() {
                this.currentChannel = 1;
                this.currentVolume = 10;
                this.isOn = false;
                this.maxVolume = 50;
                this.minVolume = 0;
                this.minChannel = 1;
                this.maxChannel = 99;
            }
            
            // Bật TV
            turnOn() {
                this.isOn = true;
                this.updateDisplay();
            }
            
            // Tắt TV
            turnOff() {
                this.isOn = false;
                this.updateDisplay();
            }
            
            // Chuyển đến kênh cụ thể
            setChannel(channel) {
                if (!this.isOn) return;
                
                // Đảm bảo kênh nằm trong phạm vi cho phép
                channel = parseInt(channel);
                if (channel < this.minChannel) channel = this.minChannel;
                if (channel > this.maxChannel) channel = this.maxChannel;
                
                this.currentChannel = channel;
                this.updateDisplay();
            }
            
            // Tăng kênh
            channelUp() {
                if (!this.isOn) return;
                this.setChannel(this.currentChannel + 1);
            }
            
            // Giảm kênh
            channelDown() {
                if (!this.isOn) return;
                this.setChannel(this.currentChannel - 1);
            }
            
            // Đặt âm lượng cụ thể
            setVolume(volume) {
                if (!this.isOn) return;
                
                // Đảm bảo âm lượng nằm trong phạm vi cho phép
                volume = parseInt(volume);
                if (volume < this.minVolume) volume = this.minVolume;
                if (volume > this.maxVolume) volume = this.maxVolume;
                
                this.currentVolume = volume;
                this.updateDisplay();
            }
            
            // Tăng âm lượng
            volumeUp() {
                if (!this.isOn) return;
                this.setVolume(this.currentVolume + 1);
            }
            
            // Giảm âm lượng
            volumeDown() {
                if (!this.isOn) return;
                this.setVolume(this.currentVolume - 1);
            }
            
            // Tắt tiếng
            toggleMute() {
                if (!this.isOn) return;
                if (this.currentVolume > 0) {
                    this.lastVolume = this.currentVolume;
                    this.currentVolume = 0;
                } else {
                    this.currentVolume = this.lastVolume || 10;
                }
                this.updateDisplay();
            }
            
            // Cập nhật hiển thị
            updateDisplay() {
                document.getElementById('current-channel').textContent = this.currentChannel;
                document.getElementById('current-volume').textContent = this.currentVolume;
                
                const statusElement = document.getElementById('tv-status');
                if (this.isOn) {
                    statusElement.textContent = 'BẬT';
                    statusElement.className = 'status-display status-on';
                } else {
                    statusElement.textContent = 'TẮT';
                    statusElement.className = 'status-display status-off';
                }
            }
        }
        
        // Lớp Remote
        class Remote {
            constructor(id, tv) {
                this.id = id;
                this.tv = tv;
            }
            
            // Bật/tắt TV
            togglePower() {
                if (this.tv.isOn) {
                    this.tv.turnOff();
                } else {
                    this.tv.turnOn();
                }
            }
            
            // Chuyển kênh
            setChannel(channel) {
                this.tv.setChannel(channel);
            }
            
            // Tăng kênh
            channelUp() {
                this.tv.channelUp();
            }
            
            // Giảm kênh
            channelDown() {
                this.tv.channelDown();
            }
            
            // Tăng âm lượng
            volumeUp() {
                this.tv.volumeUp();
            }
            
            // Giảm âm lượng
            volumeDown() {
                this.tv.volumeDown();
            }
            
            // Tắt tiếng
            toggleMute() {
                this.tv.toggleMute();
            }
        }
        
        // Khởi tạo TV và Remote
        const myTV = new TV();
        const myRemote = new Remote('RM-8876', myTV);
        
        // Cập nhật hiển thị ban đầu
        myTV.updateDisplay();
        
        // Gán sự kiện cho các nút trên remote
        document.getElementById('power-btn').addEventListener('click', () => {
            myRemote.togglePower();
        });
        
        document.getElementById('channel-up').addEventListener('click', () => {
            myRemote.channelUp();
        });
        
        document.getElementById('channel-down').addEventListener('click', () => {
            myRemote.channelDown();
        });
        
        document.getElementById('volume-up').addEventListener('click', () => {
            myRemote.volumeUp();
        });
        
        document.getElementById('volume-down').addEventListener('click', () => {
            myRemote.volumeDown();
        });
        
        document.getElementById('mute').addEventListener('click', () => {
            myRemote.toggleMute();
        });
        
        // Gán sự kiện cho các nút số
        document.querySelectorAll('.number-btn').forEach(button => {
            button.addEventListener('click', () => {
                if (!myTV.isOn) return;
                
                const value = button.textContent;
                if (value === '+10') {
                    myRemote.setChannel(myTV.currentChannel + 10);
                } else if (value === '-10') {
                    myRemote.setChannel(myTV.currentChannel - 10);
                } else {
                    myRemote.setChannel(value);
                }
            });
        });
        
        // Chạy kịch bản tự động
        document.getElementById('run-scenario').addEventListener('click', () => {
            // Đặt lại trạng thái ban đầu
            myTV.turnOff();
            
            // Tạo hiệu ứng chạy kịch bản
            setTimeout(() => {
                myRemote.togglePower(); // Bật TV
            }, 500);
            
            setTimeout(() => {
                myRemote.setChannel(7); // Chuyển đến kênh 7
            }, 1500);
            
            setTimeout(() => {
                // Chuyển từ kênh 7 đến kênh 3
                for (let i = 0; i < 4; i++) {
                    setTimeout(() => {
                        myRemote.channelDown();
                    }, i * 300);
                }
            }, 2500);
            
            setTimeout(() => {
                // Tăng âm lượng 2 lần
                myRemote.volumeUp();
                setTimeout(() => {
                    myRemote.volumeUp();
                }, 300);
            }, 4000);
            
            setTimeout(() => {
                myRemote.togglePower(); // Tắt TV
            }, 5500);
        });
    </script>
</body>
</html>
