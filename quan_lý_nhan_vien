<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hệ thống Quản lý Chấm công & Điều trị</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --success: #27ae60;
            --warning: #f39c12;
            --danger: #e74c3c;
            --light: #ecf0f1;
            --dark: #34495e;
            --teal: #1abc9c;
            --purple: #9b59b6;
        }
        
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .login-container {
            max-width: 400px;
            margin: 100px auto;
            padding: 30px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }
        
        .main-container {
            display: none;
        }
        
        .sidebar {
            background: linear-gradient(180deg, var(--primary) 0%, #1a2530 100%);
            color: white;
            min-height: 100vh;
            padding-top: 20px;
            box-shadow: 3px 0 10px rgba(0,0,0,0.1);
        }
        
        .sidebar .nav-link {
            color: rgba(255,255,255,0.8);
            padding: 12px 20px;
            margin: 5px 0;
            border-radius: 5px;
            transition: all 0.3s;
        }
        
        .sidebar .nav-link:hover, .sidebar .nav-link.active {
            background-color: rgba(255,255,255,0.1);
            color: white;
            transform: translateX(5px);
        }
        
        .sidebar .nav-link i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .content {
            padding: 20px;
        }
        
        .header-bar {
            background: white;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .real-time-clock {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--primary);
            background: rgba(52, 152, 219, 0.1);
            padding: 8px 15px;
            border-radius: 30px;
            border: 1px solid rgba(52, 152, 219, 0.2);
        }
        
        .card {
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            border: none;
            transition: transform 0.3s;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0,0,0,0.1);
        }
        
        .card-header {
            background: white;
            border-bottom: 1px solid #eee;
            font-weight: 600;
            padding: 15px 20px;
            border-radius: 10px 10px 0 0 !important;
        }
        
        .table th {
            background-color: var(--light);
            font-weight: 600;
        }
        
        .status-ok { background-color: rgba(39, 174, 96, 0.1); border-left: 4px solid var(--success); }
        .status-mn { background-color: rgba(243, 156, 18, 0.1); border-left: 4px solid var(--warning); }
        .status-cp { background-color: rgba(52, 152, 219, 0.1); border-left: 4px solid var(--secondary); }
        .status-vk { background-color: rgba(231, 76, 60, 0.1); border-left: 4px solid var(--danger); }
        
        .badge-attendance {
            font-size: 0.8em;
            padding: 5px 8px;
        }
        
        .date-header {
            writing-mode: vertical-rl;
            transform: rotate(180deg);
            text-align: center;
            font-size: 0.8em;
            font-weight: 600;
        }
        
        .section-title {
            border-left: 4px solid var(--secondary);
            padding-left: 10px;
            margin: 20px 0 15px;
            font-weight: 600;
            color: var(--dark);
        }
        
        .btn-primary {
            background-color: var(--secondary);
            border-color: var(--secondary);
        }
        
        .btn-success {
            background-color: var(--success);
            border-color: var(--success);
        }
        
        .btn-warning {
            background-color: var(--warning);
            border-color: var(--warning);
        }
        
        .btn-danger {
            background-color: var(--danger);
            border-color: var(--danger);
        }
        
        .btn-teal {
            background-color: var(--teal);
            border-color: var(--teal);
            color: white;
        }
        
        .btn-purple {
            background-color: var(--purple);
            border-color: var(--purple);
            color: white;
        }
        
        .report-section {
            page-break-inside: avoid;
        }
        
        .stats-card {
            text-align: center;
            padding: 20px;
            border-radius: 10px;
            color: white;
            margin-bottom: 20px;
        }
        
        .stats-card i {
            font-size: 2.5rem;
            margin-bottom: 15px;
            opacity: 0.8;
        }
        
        .stats-card h3 {
            font-size: 2rem;
            margin-bottom: 5px;
        }
        
        .stats-card p {
            margin-bottom: 0;
            opacity: 0.9;
        }
        
        .today-highlight {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        
        .calendar-event {
            background: rgba(255,255,255,0.2);
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        
        .quick-action-btn {
            background: white;
            border: none;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            transition: all 0.3s;
            margin-bottom: 15px;
        }
        
        .quick-action-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0,0,0,0.1);
        }
        
        .quick-action-btn i {
            font-size: 2rem;
            margin-bottom: 10px;
            color: var(--secondary);
        }
        
        .calendar-container {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            margin-bottom: 20px;
        }
        
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
        }
        
        .calendar-day {
            padding: 10px;
            text-align: center;
            border-radius: 5px;
            background: #f8f9fa;
            font-weight: 600;
        }
        
        .calendar-date {
            padding: 10px;
            text-align: center;
            border-radius: 5px;
            background: white;
            cursor: pointer;
            transition: all 0.2s;
            min-height: 60px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .calendar-date:hover {
            background: #e9ecef;
        }
        
        .calendar-date.today {
            background: var(--secondary);
            color: white;
        }
        
        .calendar-date.has-data {
            background: rgba(52, 152, 219, 0.1);
            border: 1px solid rgba(52, 152, 219, 0.3);
        }
        
        .calendar-events {
            font-size: 0.7rem;
            margin-top: 5px;
        }
        
        .calendar-event-indicator {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-right: 2px;
        }
        
        .event-attendance { background-color: var(--success); }
        .event-treatment { background-color: var(--secondary); }
        .event-management { background-color: var(--warning); }
        .event-mistake { background-color: var(--danger); }
        
        .multi-select-container {
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ced4da;
            border-radius: 0.375rem;
            padding: 10px;
        }
        
        .multi-select-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            padding: 5px;
            border-radius: 5px;
            transition: background-color 0.2s;
        }
        
        .multi-select-item:hover {
            background-color: #f8f9fa;
        }
        
        .multi-select-item input {
            margin-right: 10px;
        }
        
        .technique-badge, .management-badge, .mistake-badge {
            display: inline-block;
            margin: 2px;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
        }
        
        .technique-badge {
            background-color: rgba(52, 152, 219, 0.1);
            color: #2c3e50;
            border: 1px solid rgba(52, 152, 219, 0.3);
        }
        
        .management-badge {
            background-color: rgba(243, 156, 18, 0.1);
            color: #2c3e50;
            border: 1px solid rgba(243, 156, 18, 0.3);
        }
        
        .mistake-badge {
            background-color: rgba(231, 76, 60, 0.1);
            color: #2c3e50;
            border: 1px solid rgba(231, 76, 60, 0.3);
        }
        
        @media print {
            .no-print {
                display: none !important;
            }
            
            .card {
                box-shadow: none;
                border: 1px solid #ddd;
            }
            
            .content {
                padding: 0;
            }
        }
        
        .login-logo {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .login-logo i {
            font-size: 4rem;
            color: var(--secondary);
            margin-bottom: 10px;
        }
        
        .login-title {
            color: var(--primary);
            font-weight: 700;
        }
        
        .login-subtitle {
            color: var(--dark);
            font-size: 0.9rem;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #6c757d;
        }
        
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.5;
        }
    </style>
</head>
<body>
    <!-- Login Form -->
    <div id="loginContainer" class="login-container">
        <div class="login-logo">
            <i class="fas fa-clinic-medical"></i>
            <h3 class="login-title">PKPGSKHA</h3>
            <p class="login-subtitle">Hệ thống Quản lý Chấm công & Điều trị</p>
        </div>
        <form id="loginForm">
            <div class="mb-3">
                <label for="username" class="form-label">Tên đăng nhập</label>
                <input type="text" class="form-control" id="username" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Mật khẩu</label>
                <input type="password" class="form-control" id="password" required>
            </div>
            <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
        </form>
    </div>

    <!-- Main Application -->
    <div id="mainContainer" class="main-container">
        <div class="container-fluid">
            <div class="row">
                <!-- Sidebar -->
                <div class="col-md-2 sidebar no-print">
                    <div class="text-center mb-4">
                        <i class="fas fa-clinic-medical fa-2x mb-2"></i>
                        <h5>PKPGSKHA</h5>
                        <small class="text-muted">Quản lý Chấm công</small>
                    </div>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="#" data-section="dashboard">
                                <i class="fas fa-tachometer-alt"></i> Tổng quan
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="attendance">
                                <i class="fas fa-calendar-check"></i> Chấm công
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="treatment">
                                <i class="fas fa-user-md"></i> Điều trị BN
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="management">
                                <i class="fas fa-tasks"></i> Quản lý
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="mistakes">
                                <i class="fas fa-exclamation-triangle"></i> Lỗi NV
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="reports">
                                <i class="fas fa-chart-bar"></i> Báo cáo
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-section="settings">
                                <i class="fas fa-cog"></i> Cài đặt
                            </a>
                        </li>
                        <li class="nav-item mt-4">
                            <a class="nav-link text-warning" href="#" id="logoutBtn">
                                <i class="fas fa-sign-out-alt"></i> Đăng xuất
                            </a>
                        </li>
                    </ul>
                </div>

                <!-- Main Content -->
                <div class="col-md-10 content">
                    <!-- Header with Real-time Clock -->
                    <div class="header-bar no-print">
                        <h4 id="currentSectionTitle">Tổng quan Hệ thống</h4>
                        <div class="real-time-clock">
                            <i class="fas fa-clock me-2"></i>
                            <span id="realTimeClock">Đang tải...</span>
                        </div>
                    </div>
                    
                    <!-- Dashboard Section -->
                    <div id="dashboardSection" class="content-section">
                        <div class="today-highlight">
                            <div class="row">
                                <div class="col-md-8">
                                    <h4>Hôm nay, <span id="todayDate">...</span></h4>
                                    <p class="mb-0" id="todayEvents">Các sự kiện trong ngày sẽ hiển thị ở đây</p>
                                </div>
                                <div class="col-md-4 text-end">
                                    <h2 id="currentTime">--:--:--</h2>
                                    <p id="currentDate">Thứ Hai, 01/01/2024</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-3">
                                <div class="stats-card" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                                    <i class="fas fa-users"></i>
                                    <h3 id="totalEmployees">0</h3>
                                    <p>Nhân viên</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
                                    <i class="fas fa-user-check"></i>
                                    <h3 id="presentToday">0</h3>
                                    <p>Có mặt hôm nay</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
                                    <i class="fas fa-clock"></i>
                                    <h3 id="lateToday">0</h3>
                                    <p>Đi muộn hôm nay</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card" style="background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);">
                                    <i class="fas fa-procedures"></i>
                                    <h3 id="treatmentToday">0</h3>
                                    <p>Ca điều trị hôm nay</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row mt-4">
                            <div class="col-md-8">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Chấm công tháng hiện tại</h5>
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary active" data-period="month">Tháng</button>
                                            <button class="btn btn-outline-primary" data-period="week">Tuần</button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div id="attendanceChart" style="height: 300px;">
                                            <canvas id="attendanceChartCanvas"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="mb-0">Thao tác nhanh</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-6">
                                                <button class="quick-action-btn w-100" data-section="attendance">
                                                    <i class="fas fa-user-clock"></i>
                                                    <p>Chấm công</p>
                                                </button>
                                            </div>
                                            <div class="col-6">
                                                <button class="quick-action-btn w-100" data-section="treatment">
                                                    <i class="fas fa-stethoscope"></i>
                                                    <p>Điều trị BN</p>
                                                </button>
                                            </div>
                                            <div class="col-6">
                                                <button class="quick-action-btn w-100" data-section="management">
                                                    <i class="fas fa-clipboard-list"></i>
                                                    <p>Quản lý</p>
                                                </button>
                                            </div>
                                            <div class="col-6">
                                                <button class="quick-action-btn w-100" data-section="mistakes">
                                                    <i class="fas fa-exclamation-circle"></i>
                                                    <p>Ghi lỗi</p>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="card mt-4">
                                    <div class="card-header">
                                        <h5 class="mb-0">Thống kê điều trị</h5>
                                    </div>
                                    <div class="card-body">
                                        <div id="treatmentStats" style="height: 200px;">
                                            <canvas id="treatmentStatsCanvas"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Attendance Section -->
                    <div id="attendanceSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Theo dõi Chấm công</h4>
                            <div>
                                <select id="monthSelect" class="form-select d-inline-block w-auto">
                                    <!-- Options sẽ được thêm bằng JavaScript -->
                                </select>
                                <select id="yearSelect" class="form-select d-inline-block w-auto ms-2">
                                    <!-- Options sẽ được thêm bằng JavaScript -->
                                </select>
                                <button class="btn btn-primary ms-2" id="addAttendanceBtn">
                                    <i class="fas fa-plus"></i> Thêm chấm công
                                </button>
                            </div>
                        </div>
                        
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover" id="attendanceTable">
                                        <thead>
                                            <tr>
                                                <th rowspan="2">STT</th>
                                                <th rowspan="2">Họ tên</th>
                                                <th colspan="31" class="text-center">Ngày trong tháng</th>
                                                <th rowspan="2">Tổng công</th>
                                            </tr>
                                            <tr id="dateHeaders">
                                                <!-- Ngày sẽ được thêm bằng JavaScript -->
                                            </tr>
                                        </thead>
                                        <tbody id="attendanceBody">
                                            <!-- Dữ liệu chấm công sẽ được thêm bằng JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Treatment Section -->
                    <div id="treatmentSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Điều trị Bệnh nhân</h4>
                            <button class="btn btn-primary" id="addTreatmentBtn">
                                <i class="fas fa-plus"></i> Thêm điều trị
                            </button>
                        </div>
                        
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover" id="treatmentTable">
                                        <thead>
                                            <tr>
                                                <th>STT</th>
                                                <th>Ngày</th>
                                                <th>Nhân viên</th>
                                                <th>Bệnh nhân</th>
                                                <th>Kỹ thuật điều trị</th>
                                                <th>Thời gian</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>
                                        <tbody id="treatmentBody">
                                            <!-- Dữ liệu điều trị sẽ được thêm bằng JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Management Section -->
                    <div id="managementSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Tham gia Quản lý</h4>
                            <button class="btn btn-primary" id="addManagementBtn">
                                <i class="fas fa-plus"></i> Thêm QL
                            </button>
                        </div>
                        
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th>STT</th>
                                                <th>Ngày</th>
                                                <th>Nhân viên</th>
                                                <th>Nội dung</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>
                                        <tbody id="managementBody">
                                            <!-- Dữ liệu quản lý sẽ được thêm bằng JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Mistakes Section -->
                    <div id="mistakesSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Lỗi nhân viên</h4>
                            <button class="btn btn-warning" id="addMistakeBtn">
                                <i class="fas fa-exclamation-triangle"></i> Thêm lỗi
                            </button>
                        </div>
                        
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th>STT</th>
                                                <th>Ngày</th>
                                                <th>Nhân viên</th>
                                                <th>Loại lỗi</th>
                                                <th>Mô tả</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>
                                        <tbody id="mistakesBody">
                                            <!-- Dữ liệu lỗi sẽ được thêm bằng JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Reports Section -->
                    <div id="reportsSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Báo cáo & Thống kê</h4>
                            <div>
                                <button class="btn btn-primary no-print" id="printReportsBtn">
                                    <i class="fas fa-print"></i> In báo cáo
                                </button>
                            </div>
                        </div>
                        
                        <div class="card report-section">
                            <div class="card-header">
                                <h5 class="mb-0">Báo cáo chấm công</h5>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label">Từ ngày</label>
                                        <input type="date" class="form-control" id="reportFromDate">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Đến ngày</label>
                                        <input type="date" class="form-control" id="reportToDate">
                                    </div>
                                    <div class="col-md-4 d-flex align-items-end">
                                        <button class="btn btn-primary w-100" id="generateAttendanceReport">Tạo báo cáo</button>
                                    </div>
                                </div>
                                <div id="attendanceReportContent">
                                    <!-- Nội dung báo cáo sẽ được thêm bằng JavaScript -->
                                </div>
                            </div>
                        </div>
                        
                        <div class="card report-section mt-4">
                            <div class="card-header">
                                <h5 class="mb-0">Báo cáo điều trị</h5>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label">Tháng</label>
                                        <select class="form-control" id="reportMonth">
                                            <!-- Options sẽ được thêm bằng JavaScript -->
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Năm</label>
                                        <select class="form-control" id="reportYear">
                                            <!-- Options sẽ được thêm bằng JavaScript -->
                                        </select>
                                    </div>
                                    <div class="col-md-4 d-flex align-items-end">
                                        <button class="btn btn-primary w-100" id="generateTreatmentReport">Tạo báo cáo</button>
                                    </div>
                                </div>
                                <div id="treatmentReportContent">
                                    <!-- Nội dung báo cáo sẽ được thêm bằng JavaScript -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Settings Section -->
                    <div id="settingsSection" class="content-section" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4>Cài đặt Hệ thống</h4>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Quản lý Nhân viên</h5>
                                        <button class="btn btn-sm btn-primary" id="addEmployeeBtn">
                                            <i class="fas fa-plus"></i> Thêm
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>STT</th>
                                                        <th>Họ tên</th>
                                                        <th>Chức vụ</th>
                                                        <th>Hành động</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="employeesBody">
                                                    <!-- Dữ liệu nhân viên sẽ được thêm bằng JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="card mt-4">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Kỹ thuật Điều trị</h5>
                                        <button class="btn btn-sm btn-primary" id="addTechniqueBtn">
                                            <i class="fas fa-plus"></i> Thêm
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>STT</th>
                                                        <th>Tên kỹ thuật</th>
                                                        <th>Hành động</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="techniquesBody">
                                                    <!-- Dữ liệu kỹ thuật sẽ được thêm bằng JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Nội dung Quản lý</h5>
                                        <button class="btn btn-sm btn-primary" id="addManagementTypeBtn">
                                            <i class="fas fa-plus"></i> Thêm
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>STT</th>
                                                        <th>Nội dung</th>
                                                        <th>Hành động</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="managementTypesBody">
                                                    <!-- Dữ liệu nội dung quản lý sẽ được thêm bằng JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="card mt-4">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Loại Lỗi</h5>
                                        <button class="btn btn-sm btn-primary" id="addMistakeTypeBtn">
                                            <i class="fas fa-plus"></i> Thêm
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>STT</th>
                                                        <th>Loại lỗi</th>
                                                        <th>Mã</th>
                                                        <th>Hành động</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="mistakeTypesBody">
                                                    <!-- Dữ liệu loại lỗi sẽ được thêm bằng JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modals -->
    <!-- Login Modal (for errors) -->
    <div class="modal fade" id="loginErrorModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Lỗi đăng nhập</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="loginErrorMsg">Tên đăng nhập hoặc mật khẩu không đúng!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Employee Modal -->
    <div class="modal fade" id="employeeModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="employeeModalTitle">Thêm Nhân viên</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="employeeForm">
                        <input type="hidden" id="employeeId">
                        <div class="mb-3">
                            <label for="employeeName" class="form-label">Họ tên</label>
                            <input type="text" class="form-control" id="employeeName" required>
                        </div>
                        <div class="mb-3">
                            <label for="employeePosition" class="form-label">Chức vụ</label>
                            <input type="text" class="form-control" id="employeePosition" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveEmployeeBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Technique Modal -->
    <div class="modal fade" id="techniqueModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="techniqueModalTitle">Thêm Kỹ thuật</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="techniqueForm">
                        <input type="hidden" id="techniqueId">
                        <div class="mb-3">
                            <label for="techniqueName" class="form-label">Tên kỹ thuật</label>
                            <input type="text" class="form-control" id="techniqueName" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveTechniqueBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Management Type Modal -->
    <div class="modal fade" id="managementTypeModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="managementTypeModalTitle">Thêm Nội dung Quản lý</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="managementTypeForm">
                        <input type="hidden" id="managementTypeId">
                        <div class="mb-3">
                            <label for="managementTypeName" class="form-label">Nội dung</label>
                            <input type="text" class="form-control" id="managementTypeName" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveManagementTypeBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Mistake Type Modal -->
    <div class="modal fade" id="mistakeTypeModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="mistakeTypeModalTitle">Thêm Loại Lỗi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="mistakeTypeForm">
                        <input type="hidden" id="mistakeTypeId">
                        <div class="mb-3">
                            <label for="mistakeTypeName" class="form-label">Loại lỗi</label>
                            <input type="text" class="form-control" id="mistakeTypeName" required>
                        </div>
                        <div class="mb-3">
                            <label for="mistakeTypeCode" class="form-label">Mã lỗi</label>
                            <input type="text" class="form-control" id="mistakeTypeCode" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveMistakeTypeBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Attendance Modal -->
    <div class="modal fade" id="attendanceModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="attendanceModalTitle">Thêm Chấm công</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="attendanceForm">
                        <input type="hidden" id="attendanceId">
                        <div class="mb-3">
                            <label for="attendanceDate" class="form-label">Ngày</label>
                            <input type="date" class="form-control" id="attendanceDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="attendanceEmployee" class="form-label">Nhân viên</label>
                            <select class="form-control" id="attendanceEmployee" required>
                                <!-- Options sẽ được thêm bằng JavaScript -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="attendanceStatus" class="form-label">Trạng thái</label>
                            <select class="form-control" id="attendanceStatus" required>
                                <option value="Ok">✅ Đi đúng giờ (Ok)</option>
                                <option value="Mn">⏰ Đi muộn (Mn)</option>
                                <option value="CP">📋 Vắng có phép (CP)</option>
                                <option value="VK">❌ Vắng không phép (VK)</option>
                            </select>
                        </div>
                        <div class="mb-3" id="minutesField" style="display: none;">
                            <label for="attendanceMinutes" class="form-label">Số phút muộn</label>
                            <input type="number" class="form-control" id="attendanceMinutes" min="1" value="15">
                        </div>
                        <div class="mb-3" id="reasonField" style="display: none;">
                            <label for="attendanceReason" class="form-label">Lý do vắng</label>
                            <input type="text" class="form-control" id="attendanceReason" placeholder="Nhập lý do vắng mặt">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveAttendanceBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Treatment Modal -->
    <div class="modal fade" id="treatmentModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="treatmentModalTitle">Thêm Điều trị</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="treatmentForm">
                        <input type="hidden" id="treatmentId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="treatmentDate" class="form-label">Ngày</label>
                                    <input type="date" class="form-control" id="treatmentDate" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="treatmentEmployee" class="form-label">Nhân viên</label>
                                    <select class="form-control" id="treatmentEmployee" required>
                                        <!-- Options sẽ được thêm bằng JavaScript -->
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="treatmentPatient" class="form-label">Bệnh nhân</label>
                            <input type="text" class="form-control" id="treatmentPatient" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Kỹ thuật điều trị (có thể chọn nhiều)</label>
                            <div class="multi-select-container" id="techniqueMultiSelect">
                                <!-- Các kỹ thuật sẽ được thêm bằng JavaScript -->
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="treatmentDuration" class="form-label">Thời gian (phút)</label>
                            <input type="number" class="form-control" id="treatmentDuration" min="1" value="30" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveTreatmentBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Management Modal -->
    <div class="modal fade" id="managementModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="managementModalTitle">Thêm Quản lý</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="managementForm">
                        <input type="hidden" id="managementId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="managementDate" class="form-label">Ngày</label>
                                    <input type="date" class="form-control" id="managementDate" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="managementEmployee" class="form-label">Nhân viên</label>
                                    <select class="form-control" id="managementEmployee" required>
                                        <!-- Options sẽ được thêm bằng JavaScript -->
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nội dung quản lý (có thể chọn nhiều)</label>
                            <div class="multi-select-container" id="managementMultiSelect">
                                <!-- Các nội dung quản lý sẽ được thêm bằng JavaScript -->
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveManagementBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Mistake Modal -->
    <div class="modal fade" id="mistakeModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="mistakeModalTitle">Thêm Lỗi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="mistakeForm">
                        <input type="hidden" id="mistakeId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="mistakeDate" class="form-label">Ngày</label>
                                    <input type="date" class="form-control" id="mistakeDate" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="mistakeEmployee" class="form-label">Nhân viên</label>
                                    <select class="form-control" id="mistakeEmployee" required>
                                        <!-- Options sẽ được thêm bằng JavaScript -->
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Loại lỗi (có thể chọn nhiều)</label>
                            <div class="multi-select-container" id="mistakeMultiSelect">
                                <!-- Các loại lỗi sẽ được thêm bằng JavaScript -->
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="mistakeDescription" class="form-label">Mô tả lỗi</label>
                            <textarea class="form-control" id="mistakeDescription" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="saveMistakeBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Dữ liệu mẫu
        let employees = JSON.parse(localStorage.getItem('employees')) || [
            { id: 1, name: "Nguyễn Văn A", position: "Bác sĩ" },
            { id: 2, name: "Trần Thị B", position: "Kỹ thuật viên" },
            { id: 3, name: "Lê Văn C", position: "Điều dưỡng" }
        ];
        
        let techniques = JSON.parse(localStorage.getItem('techniques')) || [
            { id: 1, name: "Điện châm" },
            { id: 2, name: "Giác hơi" },
            { id: 3, name: "Xoa bóp bấm huyệt" },
            { id: 4, name: "Kéo giãn-kéo nắn cột sống, khớp" },
            { id: 5, name: "Thủy châm" },
            { id: 6, name: "Tens" },
            { id: 7, name: "Siêu âm" },
            { id: 8, name: "Điện phân" },
            { id: 9, name: "Hồng ngoại" },
            { id: 10, name: "Cứu huyệt" },
            { id: 11, name: "Tập PHCN" },
            { id: 12, name: "Mát xa hồi phục" },
            { id: 13, name: "Ngâm chân" },
            { id: 14, name: "Chườm thảo dược" },
            { id: 15, name: "Thông kinh lạc" }
        ];
        
        let managementTypes = JSON.parse(localStorage.getItem('managementTypes')) || [
            { id: 1, name: "Cập nhật HC" },
            { id: 2, name: "TBYT" },
            { id: 3, name: "Thuốc TC" },
            { id: 4, name: "Vệ sinh" },
            { id: 5, name: "Điện nước" }
        ];
        
        let mistakeTypes = JSON.parse(localStorage.getItem('mistakeTypes')) || [
            { id: 1, name: "Thái độ không tốt với bệnh nhân", code: "TĐ" },
            { id: 2, name: "Gây tai biến cho bệnh nhân", code: "TB" },
            { id: 3, name: "Gây thất thoát kinh tế cho phòng khám", code: "KT" }
        ];
        
        let attendanceData = JSON.parse(localStorage.getItem('attendanceData')) || [];
        let treatmentData = JSON.parse(localStorage.getItem('treatmentData')) || [];
        let managementData = JSON.parse(localStorage.getItem('managementData')) || [];
        let mistakesData = JSON.parse(localStorage.getItem('mistakesData')) || [];
        
        // Biến toàn cục cho biểu đồ
        let attendanceChart, treatmentStatsChart;
        
        // Lưu dữ liệu mẫu nếu chưa có
        function initializeData() {
            if (!localStorage.getItem('employees')) {
                localStorage.setItem('employees', JSON.stringify(employees));
            }
            if (!localStorage.getItem('techniques')) {
                localStorage.setItem('techniques', JSON.stringify(techniques));
            }
            if (!localStorage.getItem('managementTypes')) {
                localStorage.setItem('managementTypes', JSON.stringify(managementTypes));
            }
            if (!localStorage.getItem('mistakeTypes')) {
                localStorage.setItem('mistakeTypes', JSON.stringify(mistakeTypes));
            }
            if (!localStorage.getItem('attendanceData')) {
                localStorage.setItem('attendanceData', JSON.stringify(attendanceData));
            }
            if (!localStorage.getItem('treatmentData')) {
                localStorage.setItem('treatmentData', JSON.stringify(treatmentData));
            }
            if (!localStorage.getItem('managementData')) {
                localStorage.setItem('managementData', JSON.stringify(managementData));
            }
            if (!localStorage.getItem('mistakesData')) {
                localStorage.setItem('mistakesData', JSON.stringify(mistakesData));
            }
        }
        
        // Cập nhật thời gian thực
        function updateRealTimeClock() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('vi-VN');
            const dateString = now.toLocaleDateString('vi-VN', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            
            document.getElementById('realTimeClock').textContent = timeString;
            document.getElementById('currentTime').textContent = timeString;
            document.getElementById('currentDate').textContent = dateString;
            
            const todayString = now.toLocaleDateString('vi-VN');
            document.getElementById('todayDate').textContent = todayString;
        }
        
        // Cập nhật sự kiện Google Calendar (mô phỏng)
        function updateCalendarEvents() {
            const events = [
                "Họp giao ban: 8:00",
                "Kiểm tra thiết bị: 10:00",
                "Đào tạo kỹ thuật mới: 14:00"
            ];
            
            document.getElementById('todayEvents').innerHTML = events.map(event => 
                `<div class="calendar-event">${event}</div>`
            ).join('');
        }
        
        // Đăng nhập
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            // Kiểm tra đăng nhập
            if (username === 'PKPGSKHA' && password === 'K1019A') {
                document.getElementById('loginContainer').style.display = 'none';
                document.getElementById('mainContainer').style.display = 'block';
                initializeData();
                loadDashboard();
                
                // Cập nhật thời gian thực
                updateRealTimeClock();
                setInterval(updateRealTimeClock, 1000);
                updateCalendarEvents();
            } else {
                const modal = new bootstrap.Modal(document.getElementById('loginErrorModal'));
                document.getElementById('loginErrorMsg').textContent = 
                    'Tên đăng nhập hoặc mật khẩu không đúng! Vui lòng thử lại.';
                modal.show();
            }
        });
        
        // Đăng xuất
        document.getElementById('logoutBtn').addEventListener('click', function() {
            document.getElementById('loginContainer').style.display = 'block';
            document.getElementById('mainContainer').style.display = 'none';
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
        });
        
        // Điều hướng sidebar
        document.querySelectorAll('.sidebar .nav-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Cập nhật trạng thái active
                document.querySelectorAll('.sidebar .nav-link').forEach(item => {
                    item.classList.remove('active');
                });
                this.classList.add('active');
                
                // Hiển thị section tương ứng
                const section = this.getAttribute('data-section');
                document.querySelectorAll('.content-section').forEach(sec => {
                    sec.style.display = 'none';
                });
                document.getElementById(section + 'Section').style.display = 'block';
                
                // Cập nhật tiêu đề
                const sectionTitles = {
                    'dashboard': 'Tổng quan Hệ thống',
                    'attendance': 'Theo dõi Chấm công',
                    'treatment': 'Điều trị Bệnh nhân',
                    'management': 'Tham gia Quản lý',
                    'mistakes': 'Lỗi Nhân viên',
                    'reports': 'Báo cáo & Thống kê',
                    'settings': 'Cài đặt Hệ thống'
                };
                document.getElementById('currentSectionTitle').textContent = sectionTitles[section];
                
                // Tải dữ liệu cho section
                if (section === 'dashboard') {
                    loadDashboard();
                } else if (section === 'attendance') {
                    loadAttendance();
                } else if (section === 'treatment') {
                    loadTreatment();
                } else if (section === 'management') {
                    loadManagement();
                } else if (section === 'mistakes') {
                    loadMistakes();
                } else if (section === 'reports') {
                    loadReports();
                } else if (section === 'settings') {
                    loadSettings();
                }
            });
        });
        
        // Thao tác nhanh
        document.querySelectorAll('.quick-action-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const section = this.getAttribute('data-section');
                document.querySelector(`.sidebar .nav-link[data-section="${section}"]`).click();
            });
        });
        
        // Tải dashboard
        function loadDashboard() {
            // Cập nhật số liệu tổng quan
            document.getElementById('totalEmployees').textContent = employees.length;
            
            // Tính toán số liệu hôm nay
            const today = new Date().toISOString().split('T')[0];
            const todayAttendance = attendanceData.filter(a => a.date === today);
            const todayTreatment = treatmentData.filter(t => t.date === today);
            
            const presentToday = todayAttendance.filter(a => a.status === 'Ok' || a.status.startsWith('Mn')).length;
            const lateToday = todayAttendance.filter(a => a.status.startsWith('Mn')).length;
            
            document.getElementById('presentToday').textContent = presentToday;
            document.getElementById('lateToday').textContent = lateToday;
            document.getElementById('treatmentToday').textContent = todayTreatment.length;
            
            // Tạo biểu đồ chấm công
            createAttendanceChart();
            
            // Tạo biểu đồ thống kê điều trị
            createTreatmentStatsChart();
        }
        
        // Tạo biểu đồ chấm công
        function createAttendanceChart() {
            const ctx = document.getElementById('attendanceChartCanvas').getContext('2d');
            
            if (attendanceChart) {
                attendanceChart.destroy();
            }
            
            // Dữ liệu mẫu cho biểu đồ
            const labels = ['Tuần 1', 'Tuần 2', 'Tuần 3', 'Tuần 4'];
            const presentData = [18, 22, 19, 21];
            const lateData = [2, 1, 3, 0];
            const absentData = [0, 0, 1, 0];
            
            attendanceChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Có mặt',
                            data: presentData,
                            backgroundColor: 'rgba(39, 174, 96, 0.7)',
                            borderColor: 'rgba(39, 174, 96, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Đi muộn',
                            data: lateData,
                            backgroundColor: 'rgba(243, 156, 18, 0.7)',
                            borderColor: 'rgba(243, 156, 18, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Vắng mặt',
                            data: absentData,
                            backgroundColor: 'rgba(231, 76, 60, 0.7)',
                            borderColor: 'rgba(231, 76, 60, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: 'Thống kê chấm công theo tuần'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Số nhân viên'
                            }
                        }
                    }
                }
            });
        }
        
        // Tạo biểu đồ thống kê điều trị
        function createTreatmentStatsChart() {
            const ctx = document.getElementById('treatmentStatsCanvas').getContext('2d');
            
            if (treatmentStatsChart) {
                treatmentStatsChart.destroy();
            }
            
            // Dữ liệu mẫu cho biểu đồ
            const labels = techniques.slice(0, 5).map(t => t.name);
            const data = [12, 19, 8, 15, 7];
            
            treatmentStatsChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: [
                            'rgba(52, 152, 219, 0.7)',
                            'rgba(155, 89, 182, 0.7)',
                            'rgba(26, 188, 156, 0.7)',
                            'rgba(241, 196, 15, 0.7)',
                            'rgba(230, 126, 34, 0.7)'
                        ],
                        borderColor: [
                            'rgba(52, 152, 219, 1)',
                            'rgba(155, 89, 182, 1)',
                            'rgba(26, 188, 156, 1)',
                            'rgba(241, 196, 15, 1)',
                            'rgba(230, 126, 34, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        },
                        title: {
                            display: true,
                            text: 'Kỹ thuật điều trị phổ biến'
                        }
                    }
                }
            });
        }
        
        // Tải chấm công
        function loadAttendance() {
            // Tạo options cho tháng và năm
            const monthSelect = document.getElementById('monthSelect');
            const yearSelect = document.getElementById('yearSelect');
            
            monthSelect.innerHTML = '';
            yearSelect.innerHTML = '';
            
            const months = [
                'Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',
                'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'
            ];
            
            const currentYear = new Date().getFullYear();
            
            months.forEach((month, index) => {
                const option = document.createElement('option');
                option.value = index + 1;
                option.textContent = month;
                if (index + 1 === new Date().getMonth() + 1) {
                    option.selected = true;
                }
                monthSelect.appendChild(option);
            });
            
            for (let year = currentYear - 2; year <= currentYear + 1; year++) {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                if (year === currentYear) {
                    option.selected = true;
                }
                yearSelect.appendChild(option);
            }
            
            // Tạo header cho bảng chấm công
            const dateHeaders = document.getElementById('dateHeaders');
            dateHeaders.innerHTML = '';
            
            const selectedMonth = parseInt(monthSelect.value);
            const selectedYear = parseInt(yearSelect.value);
            const daysInMonth = new Date(selectedYear, selectedMonth, 0).getDate();
            
            for (let day = 1; day <= daysInMonth; day++) {
                const th = document.createElement('th');
                th.textContent = day;
                th.className = 'text-center';
                dateHeaders.appendChild(th);
            }
            
            // Tạo body cho bảng chấm công
            const attendanceBody = document.getElementById('attendanceBody');
            attendanceBody.innerHTML = '';
            
            employees.forEach((employee, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Tên nhân viên
                const nameCell = document.createElement('td');
                nameCell.textContent = employee.name;
                row.appendChild(nameCell);
                
                // Các ngày trong tháng
                for (let day = 1; day <= daysInMonth; day++) {
                    const dateStr = `${selectedYear}-${selectedMonth.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;
                    const attendance = attendanceData.find(a => a.employeeId === employee.id && a.date === dateStr);
                    
                    const dayCell = document.createElement('td');
                    dayCell.className = 'text-center';
                    
                    if (attendance) {
                        let statusClass = '';
                        let statusText = '';
                        
                        if (attendance.status === 'Ok') {
                            statusClass = 'status-ok';
                            statusText = '✅';
                        } else if (attendance.status.startsWith('Mn')) {
                            statusClass = 'status-mn';
                            statusText = `⏰${attendance.status.substring(2)}`;
                        } else if (attendance.status.startsWith('CP')) {
                            statusClass = 'status-cp';
                            statusText = `📋${attendance.status.substring(2)}`;
                        } else if (attendance.status === 'VK') {
                            statusClass = 'status-vk';
                            statusText = '❌';
                        }
                        
                        dayCell.className += ` ${statusClass}`;
                        dayCell.textContent = statusText;
                    }
                    
                    row.appendChild(dayCell);
                }
                
                // Tổng công
                const totalCell = document.createElement('td');
                totalCell.className = 'text-center fw-bold';
                totalCell.textContent = calculateTotalWorkDays(employee.id, selectedMonth, selectedYear);
                row.appendChild(totalCell);
                
                attendanceBody.appendChild(row);
            });
        }
        
        // Tính tổng số công
        function calculateTotalWorkDays(employeeId, month, year) {
            const daysInMonth = new Date(year, month, 0).getDate();
            let totalDays = 0;
            
            for (let day = 1; day <= daysInMonth; day++) {
                const dateStr = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;
                const attendance = attendanceData.find(a => a.employeeId === employeeId && a.date === dateStr);
                
                if (attendance) {
                    if (attendance.status === 'Ok') {
                        totalDays += 1;
                    } else if (attendance.status.startsWith('Mn')) {
                        const minutes = parseInt(attendance.status.substring(2));
                        if (minutes <= 15) {
                            totalDays += 0.8;
                        } else if (minutes <= 30) {
                            totalDays += 0.75;
                        } else if (minutes <= 60) {
                            totalDays += 0.5;
                        }
                    } else if (attendance.status.startsWith('CP')) {
                        totalDays += 0.5;
                    }
                    // VK không tính công
                }
            }
            
            return totalDays.toFixed(2);
        }
        
        // Tải điều trị
        function loadTreatment() {
            const treatmentBody = document.getElementById('treatmentBody');
            treatmentBody.innerHTML = '';
            
            if (treatmentData.length === 0) {
                treatmentBody.innerHTML = `
                    <tr>
                        <td colspan="7" class="text-center py-4">
                            <div class="empty-state">
                                <i class="fas fa-stethoscope"></i>
                                <h5>Chưa có dữ liệu điều trị</h5>
                                <p>Nhấn nút "Thêm điều trị" để bắt đầu nhập dữ liệu</p>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            treatmentData.forEach((treatment, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Ngày
                const dateCell = document.createElement('td');
                dateCell.textContent = new Date(treatment.date).toLocaleDateString('vi-VN');
                row.appendChild(dateCell);
                
                // Nhân viên
                const employeeCell = document.createElement('td');
                const employee = employees.find(e => e.id === treatment.employeeId);
                employeeCell.textContent = employee ? employee.name : 'N/A';
                row.appendChild(employeeCell);
                
                // Bệnh nhân
                const patientCell = document.createElement('td');
                patientCell.textContent = treatment.patientName;
                row.appendChild(patientCell);
                
                // Kỹ thuật
                const techniqueCell = document.createElement('td');
                techniqueCell.innerHTML = treatment.techniques.map(tech => 
                    `<span class="technique-badge">${tech}</span>`
                ).join('');
                row.appendChild(techniqueCell);
                
                // Thời gian
                const timeCell = document.createElement('td');
                timeCell.textContent = treatment.duration + ' phút';
                row.appendChild(timeCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-treatment" data-id="${treatment.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-treatment" data-id="${treatment.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                treatmentBody.appendChild(row);
            });
        }
        
        // Tải quản lý
        function loadManagement() {
            const managementBody = document.getElementById('managementBody');
            managementBody.innerHTML = '';
            
            if (managementData.length === 0) {
                managementBody.innerHTML = `
                    <tr>
                        <td colspan="5" class="text-center py-4">
                            <div class="empty-state">
                                <i class="fas fa-tasks"></i>
                                <h5>Chưa có dữ liệu quản lý</h5>
                                <p>Nhấn nút "Thêm QL" để bắt đầu nhập dữ liệu</p>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            managementData.forEach((item, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Ngày
                const dateCell = document.createElement('td');
                dateCell.textContent = new Date(item.date).toLocaleDateString('vi-VN');
                row.appendChild(dateCell);
                
                // Nhân viên
                const employeeCell = document.createElement('td');
                const employee = employees.find(e => e.id === item.employeeId);
                employeeCell.textContent = employee ? employee.name : 'N/A';
                row.appendChild(employeeCell);
                
                // Nội dung
                const contentCell = document.createElement('td');
                contentCell.innerHTML = item.contents.map(content => 
                    `<span class="management-badge">${content}</span>`
                ).join('');
                row.appendChild(contentCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-management" data-id="${item.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-management" data-id="${item.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                managementBody.appendChild(row);
            });
        }
        
        // Tải lỗi
        function loadMistakes() {
            const mistakesBody = document.getElementById('mistakesBody');
            mistakesBody.innerHTML = '';
            
            if (mistakesData.length === 0) {
                mistakesBody.innerHTML = `
                    <tr>
                        <td colspan="6" class="text-center py-4">
                            <div class="empty-state">
                                <i class="fas fa-exclamation-triangle"></i>
                                <h5>Chưa có dữ liệu lỗi</h5>
                                <p>Nhấn nút "Thêm lỗi" để bắt đầu nhập dữ liệu</p>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            mistakesData.forEach((mistake, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Ngày
                const dateCell = document.createElement('td');
                dateCell.textContent = new Date(mistake.date).toLocaleDateString('vi-VN');
                row.appendChild(dateCell);
                
                // Nhân viên
                const employeeCell = document.createElement('td');
                const employee = employees.find(e => e.id === mistake.employeeId);
                employeeCell.textContent = employee ? employee.name : 'N/A';
                row.appendChild(employeeCell);
                
                // Loại lỗi
                const typeCell = document.createElement('td');
                typeCell.innerHTML = mistake.types.map(type => {
                    const mistakeType = mistakeTypes.find(t => t.code === type);
                    return `<span class="mistake-badge">${mistakeType ? `${mistakeType.code} - ${mistakeType.name}` : type}</span>`;
                }).join('');
                row.appendChild(typeCell);
                
                // Mô tả
                const descCell = document.createElement('td');
                descCell.textContent = mistake.description;
                row.appendChild(descCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-mistake" data-id="${mistake.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-mistake" data-id="${mistake.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                mistakesBody.appendChild(row);
            });
        }
        
        // Tải báo cáo
        function loadReports() {
            // Thiết lập ngày mặc định cho báo cáo
            const today = new Date();
            const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
            
            document.getElementById('reportFromDate').value = firstDay.toISOString().split('T')[0];
            document.getElementById('reportToDate').value = today.toISOString().split('T')[0];
            
            // Tạo options cho tháng và năm báo cáo
            const reportMonth = document.getElementById('reportMonth');
            const reportYear = document.getElementById('reportYear');
            
            reportMonth.innerHTML = '';
            reportYear.innerHTML = '';
            
            const months = [
                'Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',
                'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'
            ];
            
            const currentYear = new Date().getFullYear();
            
            months.forEach((month, index) => {
                const option = document.createElement('option');
                option.value = index + 1;
                option.textContent = month;
                if (index + 1 === new Date().getMonth() + 1) {
                    option.selected = true;
                }
                reportMonth.appendChild(option);
            });
            
            for (let year = currentYear - 2; year <= currentYear; year++) {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                if (year === currentYear) {
                    option.selected = true;
                }
                reportYear.appendChild(option);
            }
        }
        
        // Tải cài đặt
        function loadSettings() {
            // Tải nhân viên
            const employeesBody = document.getElementById('employeesBody');
            employeesBody.innerHTML = '';
            
            employees.forEach((employee, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Họ tên
                const nameCell = document.createElement('td');
                nameCell.textContent = employee.name;
                row.appendChild(nameCell);
                
                // Chức vụ
                const positionCell = document.createElement('td');
                positionCell.textContent = employee.position;
                row.appendChild(positionCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-employee" data-id="${employee.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-employee" data-id="${employee.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                employeesBody.appendChild(row);
            });
            
            // Tải kỹ thuật
            const techniquesBody = document.getElementById('techniquesBody');
            techniquesBody.innerHTML = '';
            
            techniques.forEach((technique, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Tên kỹ thuật
                const nameCell = document.createElement('td');
                nameCell.textContent = technique.name;
                row.appendChild(nameCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-technique" data-id="${technique.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-technique" data-id="${technique.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                techniquesBody.appendChild(row);
            });
            
            // Tải nội dung quản lý
            const managementTypesBody = document.getElementById('managementTypesBody');
            managementTypesBody.innerHTML = '';
            
            managementTypes.forEach((type, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Nội dung
                const nameCell = document.createElement('td');
                nameCell.textContent = type.name;
                row.appendChild(nameCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-management-type" data-id="${type.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-management-type" data-id="${type.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                managementTypesBody.appendChild(row);
            });
            
            // Tải loại lỗi
            const mistakeTypesBody = document.getElementById('mistakeTypesBody');
            mistakeTypesBody.innerHTML = '';
            
            mistakeTypes.forEach((type, index) => {
                const row = document.createElement('tr');
                
                // STT
                const stnCell = document.createElement('td');
                stnCell.textContent = index + 1;
                row.appendChild(stnCell);
                
                // Loại lỗi
                const nameCell = document.createElement('td');
                nameCell.textContent = type.name;
                row.appendChild(nameCell);
                
                // Mã
                const codeCell = document.createElement('td');
                codeCell.textContent = type.code;
                row.appendChild(codeCell);
                
                // Hành động
                const actionCell = document.createElement('td');
                actionCell.innerHTML = `
                    <button class="btn btn-sm btn-warning me-1 edit-mistake-type" data-id="${type.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-mistake-type" data-id="${type.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                row.appendChild(actionCell);
                
                mistakeTypesBody.appendChild(row);
            });
        }
        
        // Tạo multi-select cho kỹ thuật
        function createTechniqueMultiSelect(containerId, selectedTechniques = []) {
            const container = document.getElementById(containerId);
            container.innerHTML = '';
            
            techniques.forEach(technique => {
                const isSelected = selectedTechniques.includes(technique.name);
                const item = document.createElement('div');
                item.className = 'multi-select-item';
                item.innerHTML = `
                    <input type="checkbox" id="tech-${technique.id}" value="${technique.name}" ${isSelected ? 'checked' : ''}>
                    <label for="tech-${technique.id}">${technique.name}</label>
                `;
                container.appendChild(item);
            });
        }
        
        // Tạo multi-select cho nội dung quản lý
        function createManagementMultiSelect(containerId, selectedContents = []) {
            const container = document.getElementById(containerId);
            container.innerHTML = '';
            
            managementTypes.forEach(type => {
                const isSelected = selectedContents.includes(type.name);
                const item = document.createElement('div');
                item.className = 'multi-select-item';
                item.innerHTML = `
                    <input type="checkbox" id="mgmt-${type.id}" value="${type.name}" ${isSelected ? 'checked' : ''}>
                    <label for="mgmt-${type.id}">${type.name}</label>
                `;
                container.appendChild(item);
            });
        }
        
        // Tạo multi-select cho loại lỗi
        function createMistakeMultiSelect(containerId, selectedTypes = []) {
            const container = document.getElementById(containerId);
            container.innerHTML = '';
            
            mistakeTypes.forEach(type => {
                const isSelected = selectedTypes.includes(type.code);
                const item = document.createElement('div');
                item.className = 'multi-select-item';
                item.innerHTML = `
                    <input type="checkbox" id="mistake-${type.id}" value="${type.code}" ${isSelected ? 'checked' : ''}>
                    <label for="mistake-${type.id}">${type.code} - ${type.name}</label>
                `;
                container.appendChild(item);
            });
        }
        
        // Lấy các kỹ thuật đã chọn
        function getSelectedTechniques(containerId) {
            const container = document.getElementById(containerId);
            const checkboxes = container.querySelectorAll('input[type="checkbox"]:checked');
            return Array.from(checkboxes).map(cb => cb.value);
        }
        
        // Lấy các nội dung quản lý đã chọn
        function getSelectedManagementTypes(containerId) {
            const container = document.getElementById(containerId);
            const checkboxes = container.querySelectorAll('input[type="checkbox"]:checked');
            return Array.from(checkboxes).map(cb => cb.value);
        }
        
        // Lấy các loại lỗi đã chọn
        function getSelectedMistakeTypes(containerId) {
            const container = document.getElementById(containerId);
            const checkboxes = container.querySelectorAll('input[type="checkbox"]:checked');
            return Array.from(checkboxes).map(cb => cb.value);
        }
        
        // Xử lý sự kiện cho các nút thêm/sửa/xóa
        document.addEventListener('DOMContentLoaded', function() {
            // Thêm nhân viên
            document.getElementById('addEmployeeBtn').addEventListener('click', function() {
                document.getElementById('employeeModalTitle').textContent = 'Thêm Nhân viên';
                document.getElementById('employeeId').value = '';
                document.getElementById('employeeName').value = '';
                document.getElementById('employeePosition').value = '';
                
                const modal = new bootstrap.Modal(document.getElementById('employeeModal'));
                modal.show();
            });
            
            // Lưu nhân viên
            document.getElementById('saveEmployeeBtn').addEventListener('click', function() {
                const id = document.getElementById('employeeId').value;
                const name = document.getElementById('employeeName').value;
                const position = document.getElementById('employeePosition').value;
                
                if (id) {
                    // Sửa nhân viên
                    const index = employees.findIndex(e => e.id == id);
                    if (index !== -1) {
                        employees[index].name = name;
                        employees[index].position = position;
                    }
                } else {
                    // Thêm nhân viên
                    const newId = employees.length > 0 ? Math.max(...employees.map(e => e.id)) + 1 : 1;
                    employees.push({
                        id: newId,
                        name: name,
                        position: position
                    });
                }
                
                localStorage.setItem('employees', JSON.stringify(employees));
                bootstrap.Modal.getInstance(document.getElementById('employeeModal')).hide();
                loadSettings();
            });
            
            // Thêm kỹ thuật
            document.getElementById('addTechniqueBtn').addEventListener('click', function() {
                document.getElementById('techniqueModalTitle').textContent = 'Thêm Kỹ thuật';
                document.getElementById('techniqueId').value = '';
                document.getElementById('techniqueName').value = '';
                
                const modal = new bootstrap.Modal(document.getElementById('techniqueModal'));
                modal.show();
            });
            
            // Lưu kỹ thuật
            document.getElementById('saveTechniqueBtn').addEventListener('click', function() {
                const id = document.getElementById('techniqueId').value;
                const name = document.getElementById('techniqueName').value;
                
                if (id) {
                    // Sửa kỹ thuật
                    const index = techniques.findIndex(t => t.id == id);
                    if (index !== -1) {
                        techniques[index].name = name;
                    }
                } else {
                    // Thêm kỹ thuật
                    const newId = techniques.length > 0 ? Math.max(...techniques.map(t => t.id)) + 1 : 1;
                    techniques.push({
                        id: newId,
                        name: name
                    });
                }
                
                localStorage.setItem('techniques', JSON.stringify(techniques));
                bootstrap.Modal.getInstance(document.getElementById('techniqueModal')).hide();
                loadSettings();
            });
            
            // Thêm nội dung quản lý
            document.getElementById('addManagementTypeBtn').addEventListener('click', function() {
                document.getElementById('managementTypeModalTitle').textContent = 'Thêm Nội dung Quản lý';
                document.getElementById('managementTypeId').value = '';
                document.getElementById('managementTypeName').value = '';
                
                const modal = new bootstrap.Modal(document.getElementById('managementTypeModal'));
                modal.show();
            });
            
            // Lưu nội dung quản lý
            document.getElementById('saveManagementTypeBtn').addEventListener('click', function() {
                const id = document.getElementById('managementTypeId').value;
                const name = document.getElementById('managementTypeName').value;
                
                if (id) {
                    // Sửa nội dung quản lý
                    const index = managementTypes.findIndex(m => m.id == id);
                    if (index !== -1) {
                        managementTypes[index].name = name;
                    }
                } else {
                    // Thêm nội dung quản lý
                    const newId = managementTypes.length > 0 ? Math.max(...managementTypes.map(m => m.id)) + 1 : 1;
                    managementTypes.push({
                        id: newId,
                        name: name
                    });
                }
                
                localStorage.setItem('managementTypes', JSON.stringify(managementTypes));
                bootstrap.Modal.getInstance(document.getElementById('managementTypeModal')).hide();
                loadSettings();
            });
            
            // Thêm loại lỗi
            document.getElementById('addMistakeTypeBtn').addEventListener('click', function() {
                document.getElementById('mistakeTypeModalTitle').textContent = 'Thêm Loại Lỗi';
                document.getElementById('mistakeTypeId').value = '';
                document.getElementById('mistakeTypeName').value = '';
                document.getElementById('mistakeTypeCode').value = '';
                
                const modal = new bootstrap.Modal(document.getElementById('mistakeTypeModal'));
                modal.show();
            });
            
            // Lưu loại lỗi
            document.getElementById('saveMistakeTypeBtn').addEventListener('click', function() {
                const id = document.getElementById('mistakeTypeId').value;
                const name = document.getElementById('mistakeTypeName').value;
                const code = document.getElementById('mistakeTypeCode').value;
                
                if (id) {
                    // Sửa loại lỗi
                    const index = mistakeTypes.findIndex(m => m.id == id);
                    if (index !== -1) {
                        mistakeTypes[index].name = name;
                        mistakeTypes[index].code = code;
                    }
                } else {
                    // Thêm loại lỗi
                    const newId = mistakeTypes.length > 0 ? Math.max(...mistakeTypes.map(m => m.id)) + 1 : 1;
                    mistakeTypes.push({
                        id: newId,
                        name: name,
                        code: code
                    });
                }
                
                localStorage.setItem('mistakeTypes', JSON.stringify(mistakeTypes));
                bootstrap.Modal.getInstance(document.getElementById('mistakeTypeModal')).hide();
                loadSettings();
            });
            
            // Thêm chấm công
            document.getElementById('addAttendanceBtn').addEventListener('click', function() {
                document.getElementById('attendanceModalTitle').textContent = 'Thêm Chấm công';
                document.getElementById('attendanceId').value = '';
                document.getElementById('attendanceDate').value = new Date().toISOString().split('T')[0];
                
                // Điền danh sách nhân viên
                const employeeSelect = document.getElementById('attendanceEmployee');
                employeeSelect.innerHTML = '';
                employees.forEach(employee => {
                    const option = document.createElement('option');
                    option.value = employee.id;
                    option.textContent = employee.name;
                    employeeSelect.appendChild(option);
                });
                
                document.getElementById('attendanceStatus').value = 'Ok';
                document.getElementById('minutesField').style.display = 'none';
                document.getElementById('reasonField').style.display = 'none';
                
                const modal = new bootstrap.Modal(document.getElementById('attendanceModal'));
                modal.show();
            });
            
            // Xử lý thay đổi trạng thái chấm công
            document.getElementById('attendanceStatus').addEventListener('change', function() {
                const status = this.value;
                const minutesField = document.getElementById('minutesField');
                const reasonField = document.getElementById('reasonField');
                
                if (status === 'Mn') {
                    minutesField.style.display = 'block';
                    reasonField.style.display = 'none';
                } else if (status === 'CP') {
                    minutesField.style.display = 'none';
                    reasonField.style.display = 'block';
                } else {
                    minutesField.style.display = 'none';
                    reasonField.style.display = 'none';
                }
            });
            
            // Lưu chấm công
            document.getElementById('saveAttendanceBtn').addEventListener('click', function() {
                const id = document.getElementById('attendanceId').value;
                const date = document.getElementById('attendanceDate').value;
                const employeeId = parseInt(document.getElementById('attendanceEmployee').value);
                let status = document.getElementById('attendanceStatus').value;
                
                if (status === 'Mn') {
                    const minutes = document.getElementById('attendanceMinutes').value;
                    status = `Mn${minutes}`;
                } else if (status === 'CP') {
                    const reason = document.getElementById('attendanceReason').value;
                    status = `CP${reason}`;
                }
                
                if (id) {
                    // Sửa chấm công
                    const index = attendanceData.findIndex(a => a.id == id);
                    if (index !== -1) {
                        attendanceData[index].date = date;
                        attendanceData[index].employeeId = employeeId;
                        attendanceData[index].status = status;
                    }
                } else {
                    // Thêm chấm công
                    const newId = attendanceData.length > 0 ? Math.max(...attendanceData.map(a => a.id)) + 1 : 1;
                    attendanceData.push({
                        id: newId,
                        date: date,
                        employeeId: employeeId,
                        status: status
                    });
                }
                
                localStorage.setItem('attendanceData', JSON.stringify(attendanceData));
                bootstrap.Modal.getInstance(document.getElementById('attendanceModal')).hide();
                loadAttendance();
            });
            
            // Thêm điều trị
            document.getElementById('addTreatmentBtn').addEventListener('click', function() {
                document.getElementById('treatmentModalTitle').textContent = 'Thêm Điều trị';
                document.getElementById('treatmentId').value = '';
                document.getElementById('treatmentDate').value = new Date().toISOString().split('T')[0];
                document.getElementById('treatmentPatient').value = '';
                document.getElementById('treatmentDuration').value = '30';
                
                // Điền danh sách nhân viên
                const employeeSelect = document.getElementById('treatmentEmployee');
                employeeSelect.innerHTML = '';
                employees.forEach(employee => {
                    const option = document.createElement('option');
                    option.value = employee.id;
                    option.textContent = employee.name;
                    employeeSelect.appendChild(option);
                });
                
                // Tạo multi-select cho kỹ thuật
                createTechniqueMultiSelect('techniqueMultiSelect');
                
                const modal = new bootstrap.Modal(document.getElementById('treatmentModal'));
                modal.show();
            });
            
            // Lưu điều trị
            document.getElementById('saveTreatmentBtn').addEventListener('click', function() {
                const id = document.getElementById('treatmentId').value;
                const date = document.getElementById('treatmentDate').value;
                const employeeId = parseInt(document.getElementById('treatmentEmployee').value);
                const patientName = document.getElementById('treatmentPatient').value;
                const duration = parseInt(document.getElementById('treatmentDuration').value);
                const selectedTechniques = getSelectedTechniques('techniqueMultiSelect');
                
                if (selectedTechniques.length === 0) {
                    alert('Vui lòng chọn ít nhất một kỹ thuật điều trị');
                    return;
                }
                
                if (id) {
                    // Sửa điều trị
                    const index = treatmentData.findIndex(t => t.id == id);
                    if (index !== -1) {
                        treatmentData[index].date = date;
                        treatmentData[index].employeeId = employeeId;
                        treatmentData[index].patientName = patientName;
                        treatmentData[index].techniques = selectedTechniques;
                        treatmentData[index].duration = duration;
                    }
                } else {
                    // Thêm điều trị
                    const newId = treatmentData.length > 0 ? Math.max(...treatmentData.map(t => t.id)) + 1 : 1;
                    treatmentData.push({
                        id: newId,
                        date: date,
                        employeeId: employeeId,
                        patientName: patientName,
                        techniques: selectedTechniques,
                        duration: duration
                    });
                }
                
                localStorage.setItem('treatmentData', JSON.stringify(treatmentData));
                bootstrap.Modal.getInstance(document.getElementById('treatmentModal')).hide();
                loadTreatment();
            });
            
            // Thêm quản lý
            document.getElementById('addManagementBtn').addEventListener('click', function() {
                document.getElementById('managementModalTitle').textContent = 'Thêm Quản lý';
                document.getElementById('managementId').value = '';
                document.getElementById('managementDate').value = new Date().toISOString().split('T')[0];
                
                // Điền danh sách nhân viên
                const employeeSelect = document.getElementById('managementEmployee');
                employeeSelect.innerHTML = '';
                employees.forEach(employee => {
                    const option = document.createElement('option');
                    option.value = employee.id;
                    option.textContent = employee.name;
                    employeeSelect.appendChild(option);
                });
                
                // Tạo multi-select cho nội dung quản lý
                createManagementMultiSelect('managementMultiSelect');
                
                const modal = new bootstrap.Modal(document.getElementById('managementModal'));
                modal.show();
            });
            
            // Lưu quản lý
            document.getElementById('saveManagementBtn').addEventListener('click', function() {
                const id = document.getElementById('managementId').value;
                const date = document.getElementById('managementDate').value;
                const employeeId = parseInt(document.getElementById('managementEmployee').value);
                const selectedContents = getSelectedManagementTypes('managementMultiSelect');
                
                if (selectedContents.length === 0) {
                    alert('Vui lòng chọn ít nhất một nội dung quản lý');
                    return;
                }
                
                if (id) {
                    // Sửa quản lý
                    const index = managementData.findIndex(m => m.id == id);
                    if (index !== -1) {
                        managementData[index].date = date;
                        managementData[index].employeeId = employeeId;
                        managementData[index].contents = selectedContents;
                    }
                } else {
                    // Thêm quản lý
                    const newId = managementData.length > 0 ? Math.max(...managementData.map(m => m.id)) + 1 : 1;
                    managementData.push({
                        id: newId,
                        date: date,
                        employeeId: employeeId,
                        contents: selectedContents
                    });
                }
                
                localStorage.setItem('managementData', JSON.stringify(managementData));
                bootstrap.Modal.getInstance(document.getElementById('managementModal')).hide();
                loadManagement();
            });
            
            // Thêm lỗi
            document.getElementById('addMistakeBtn').addEventListener('click', function() {
                document.getElementById('mistakeModalTitle').textContent = 'Thêm Lỗi';
                document.getElementById('mistakeId').value = '';
                document.getElementById('mistakeDate').value = new Date().toISOString().split('T')[0];
                document.getElementById('mistakeDescription').value = '';
                
                // Điền danh sách nhân viên
                const employeeSelect = document.getElementById('mistakeEmployee');
                employeeSelect.innerHTML = '';
                employees.forEach(employee => {
                    const option = document.createElement('option');
                    option.value = employee.id;
                    option.textContent = employee.name;
                    employeeSelect.appendChild(option);
                });
                
                // Tạo multi-select cho loại lỗi
                createMistakeMultiSelect('mistakeMultiSelect');
                
                const modal = new bootstrap.Modal(document.getElementById('mistakeModal'));
                modal.show();
            });
            
            // Lưu lỗi
            document.getElementById('saveMistakeBtn').addEventListener('click', function() {
                const id = document.getElementById('mistakeId').value;
                const date = document.getElementById('mistakeDate').value;
                const employeeId = parseInt(document.getElementById('mistakeEmployee').value);
                const selectedTypes = getSelectedMistakeTypes('mistakeMultiSelect');
                const description = document.getElementById('mistakeDescription').value;
                
                if (selectedTypes.length === 0) {
                    alert('Vui lòng chọn ít nhất một loại lỗi');
                    return;
                }
                
                if (id) {
                    // Sửa lỗi
                    const index = mistakesData.findIndex(m => m.id == id);
                    if (index !== -1) {
                        mistakesData[index].date = date;
                        mistakesData[index].employeeId = employeeId;
                        mistakesData[index].types = selectedTypes;
                        mistakesData[index].description = description;
                    }
                } else {
                    // Thêm lỗi
                    const newId = mistakesData.length > 0 ? Math.max(...mistakesData.map(m => m.id)) + 1 : 1;
                    mistakesData.push({
                        id: newId,
                        date: date,
                        employeeId: employeeId,
                        types: selectedTypes,
                        description: description
                    });
                }
                
                localStorage.setItem('mistakesData', JSON.stringify(mistakesData));
                bootstrap.Modal.getInstance(document.getElementById('mistakeModal')).hide();
                loadMistakes();
            });
            
            // Sửa nhân viên (delegation)
            document.addEventListener('click', function(e) {
                if (e.target.closest('.edit-employee')) {
                    const id = e.target.closest('.edit-employee').getAttribute('data-id');
                    const employee = employees.find(e => e.id == id);
                    
                    if (employee) {
                        document.getElementById('employeeModalTitle').textContent = 'Sửa Nhân viên';
                        document.getElementById('employeeId').value = employee.id;
                        document.getElementById('employeeName').value = employee.name;
                        document.getElementById('employeePosition').value = employee.position;
                        
                        const modal = new bootstrap.Modal(document.getElementById('employeeModal'));
                        modal.show();
                    }
                }
                
                // Xóa nhân viên
                if (e.target.closest('.delete-employee')) {
                    const id = e.target.closest('.delete-employee').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa nhân viên này?')) {
                        employees = employees.filter(e => e.id != id);
                        localStorage.setItem('employees', JSON.stringify(employees));
                        loadSettings();
                    }
                }
                
                // Sửa kỹ thuật
                if (e.target.closest('.edit-technique')) {
                    const id = e.target.closest('.edit-technique').getAttribute('data-id');
                    const technique = techniques.find(t => t.id == id);
                    
                    if (technique) {
                        document.getElementById('techniqueModalTitle').textContent = 'Sửa Kỹ thuật';
                        document.getElementById('techniqueId').value = technique.id;
                        document.getElementById('techniqueName').value = technique.name;
                        
                        const modal = new bootstrap.Modal(document.getElementById('techniqueModal'));
                        modal.show();
                    }
                }
                
                // Xóa kỹ thuật
                if (e.target.closest('.delete-technique')) {
                    const id = e.target.closest('.delete-technique').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa kỹ thuật này?')) {
                        techniques = techniques.filter(t => t.id != id);
                        localStorage.setItem('techniques', JSON.stringify(techniques));
                        loadSettings();
                    }
                }
                
                // Sửa nội dung quản lý
                if (e.target.closest('.edit-management-type')) {
                    const id = e.target.closest('.edit-management-type').getAttribute('data-id');
                    const type = managementTypes.find(m => m.id == id);
                    
                    if (type) {
                        document.getElementById('managementTypeModalTitle').textContent = 'Sửa Nội dung Quản lý';
                        document.getElementById('managementTypeId').value = type.id;
                        document.getElementById('managementTypeName').value = type.name;
                        
                        const modal = new bootstrap.Modal(document.getElementById('managementTypeModal'));
                        modal.show();
                    }
                }
                
                // Xóa nội dung quản lý
                if (e.target.closest('.delete-management-type')) {
                    const id = e.target.closest('.delete-management-type').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa nội dung quản lý này?')) {
                        managementTypes = managementTypes.filter(m => m.id != id);
                        localStorage.setItem('managementTypes', JSON.stringify(managementTypes));
                        loadSettings();
                    }
                }
                
                // Sửa loại lỗi
                if (e.target.closest('.edit-mistake-type')) {
                    const id = e.target.closest('.edit-mistake-type').getAttribute('data-id');
                    const type = mistakeTypes.find(m => m.id == id);
                    
                    if (type) {
                        document.getElementById('mistakeTypeModalTitle').textContent = 'Sửa Loại Lỗi';
                        document.getElementById('mistakeTypeId').value = type.id;
                        document.getElementById('mistakeTypeName').value = type.name;
                        document.getElementById('mistakeTypeCode').value = type.code;
                        
                        const modal = new bootstrap.Modal(document.getElementById('mistakeTypeModal'));
                        modal.show();
                    }
                }
                
                // Xóa loại lỗi
                if (e.target.closest('.delete-mistake-type')) {
                    const id = e.target.closest('.delete-mistake-type').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa loại lỗi này?')) {
                        mistakeTypes = mistakeTypes.filter(m => m.id != id);
                        localStorage.setItem('mistakeTypes', JSON.stringify(mistakeTypes));
                        loadSettings();
                    }
                }
                
                // Sửa điều trị
                if (e.target.closest('.edit-treatment')) {
                    const id = e.target.closest('.edit-treatment').getAttribute('data-id');
                    const treatment = treatmentData.find(t => t.id == id);
                    
                    if (treatment) {
                        document.getElementById('treatmentModalTitle').textContent = 'Sửa Điều trị';
                        document.getElementById('treatmentId').value = treatment.id;
                        document.getElementById('treatmentDate').value = treatment.date;
                        
                        // Điền danh sách nhân viên
                        const employeeSelect = document.getElementById('treatmentEmployee');
                        employeeSelect.innerHTML = '';
                        employees.forEach(employee => {
                            const option = document.createElement('option');
                            option.value = employee.id;
                            option.textContent = employee.name;
                            if (employee.id === treatment.employeeId) {
                                option.selected = true;
                            }
                            employeeSelect.appendChild(option);
                        });
                        
                        document.getElementById('treatmentPatient').value = treatment.patientName;
                        document.getElementById('treatmentDuration').value = treatment.duration;
                        
                        // Tạo multi-select cho kỹ thuật với các kỹ thuật đã chọn
                        createTechniqueMultiSelect('techniqueMultiSelect', treatment.techniques);
                        
                        const modal = new bootstrap.Modal(document.getElementById('treatmentModal'));
                        modal.show();
                    }
                }
                
                // Xóa điều trị
                if (e.target.closest('.delete-treatment')) {
                    const id = e.target.closest('.delete-treatment').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa bản ghi điều trị này?')) {
                        treatmentData = treatmentData.filter(t => t.id != id);
                        localStorage.setItem('treatmentData', JSON.stringify(treatmentData));
                        loadTreatment();
                    }
                }
                
                // Sửa quản lý
                if (e.target.closest('.edit-management')) {
                    const id = e.target.closest('.edit-management').getAttribute('data-id');
                    const management = managementData.find(m => m.id == id);
                    
                    if (management) {
                        document.getElementById('managementModalTitle').textContent = 'Sửa Quản lý';
                        document.getElementById('managementId').value = management.id;
                        document.getElementById('managementDate').value = management.date;
                        
                        // Điền danh sách nhân viên
                        const employeeSelect = document.getElementById('managementEmployee');
                        employeeSelect.innerHTML = '';
                        employees.forEach(employee => {
                            const option = document.createElement('option');
                            option.value = employee.id;
                            option.textContent = employee.name;
                            if (employee.id === management.employeeId) {
                                option.selected = true;
                            }
                            employeeSelect.appendChild(option);
                        });
                        
                        // Tạo multi-select cho nội dung quản lý với các nội dung đã chọn
                        createManagementMultiSelect('managementMultiSelect', management.contents);
                        
                        const modal = new bootstrap.Modal(document.getElementById('managementModal'));
                        modal.show();
                    }
                }
                
                // Xóa quản lý
                if (e.target.closest('.delete-management')) {
                    const id = e.target.closest('.delete-management').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa bản ghi quản lý này?')) {
                        managementData = managementData.filter(m => m.id != id);
                        localStorage.setItem('managementData', JSON.stringify(managementData));
                        loadManagement();
                    }
                }
                
                // Sửa lỗi
                if (e.target.closest('.edit-mistake')) {
                    const id = e.target.closest('.edit-mistake').getAttribute('data-id');
                    const mistake = mistakesData.find(m => m.id == id);
                    
                    if (mistake) {
                        document.getElementById('mistakeModalTitle').textContent = 'Sửa Lỗi';
                        document.getElementById('mistakeId').value = mistake.id;
                        document.getElementById('mistakeDate').value = mistake.date;
                        
                        // Điền danh sách nhân viên
                        const employeeSelect = document.getElementById('mistakeEmployee');
                        employeeSelect.innerHTML = '';
                        employees.forEach(employee => {
                            const option = document.createElement('option');
                            option.value = employee.id;
                            option.textContent = employee.name;
                            if (employee.id === mistake.employeeId) {
                                option.selected = true;
                            }
                            employeeSelect.appendChild(option);
                        });
                        
                        document.getElementById('mistakeDescription').value = mistake.description;
                        
                        // Tạo multi-select cho loại lỗi với các loại đã chọn
                        createMistakeMultiSelect('mistakeMultiSelect', mistake.types);
                        
                        const modal = new bootstrap.Modal(document.getElementById('mistakeModal'));
                        modal.show();
                    }
                }
                
                // Xóa lỗi
                if (e.target.closest('.delete-mistake')) {
                    const id = e.target.closest('.delete-mistake').getAttribute('data-id');
                    if (confirm('Bạn có chắc chắn muốn xóa bản ghi lỗi này?')) {
                        mistakesData = mistakesData.filter(m => m.id != id);
                        localStorage.setItem('mistakesData', JSON.stringify(mistakesData));
                        loadMistakes();
                    }
                }
            });
        });
        
        // In báo cáo
        document.getElementById('printReportsBtn').addEventListener('click', function() {
            window.print();
        });
        
        // Khởi tạo
        document.addEventListener('DOMContentLoaded', function() {
            // Tải dữ liệu mẫu nếu cần
            initializeData();
        });
    </script>
</body>
</html>
