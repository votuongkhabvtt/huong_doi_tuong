<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trò chơi Rắn săn mồi</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }
        
        h1 {
            color: #2c3e50;
            margin-bottom: 20px;
        }
        
        #game-container {
            position: relative;
        }
        
        #game-board {
            border: 2px solid #2c3e50;
            background-color: #ecf0f1;
        }
        
        #score-display {
            margin-top: 10px;
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
        }
        
        #game-over {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgba(231, 76, 60, 0.9);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            display: none;
        }
        
        #restart-btn {
            margin-top: 15px;
            padding: 8px 16px;
            background-color: #2c3e50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        
        #restart-btn:hover {
            background-color: #34495e;
        }
        
        .controls {
            margin-top: 20px;
            text-align: center;
        }
        
        .controls p {
            margin: 5px 0;
            color: #7f8c8d;
        }
    </style>
</head>
<body>
    <h1>Trò chơi Rắn săn mồi</h1>
    
    <div id="game-container">
        <canvas id="game-board" width="400" height="400"></canvas>
        <div id="game-over">
            <h2>Game Over!</h2>
            <p id="final-score">Điểm số: 0</p>
            <button id="restart-btn">Chơi lại</button>
        </div>
    </div>
    
    <div id="score-display">Điểm: 0</div>
    
    <div class="controls">
        <p>Điều khiển: Mũi tên hoặc W, A, S, D</p>
        <p>Ấn phím Space để tạm dừng</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const canvas = document.getElementById('game-board');
            const ctx = canvas.getContext('2d');
            const scoreDisplay = document.getElementById('score-display');
            const gameOverDisplay = document.getElementById('game-over');
            const finalScoreDisplay = document.getElementById('final-score');
            const restartBtn = document.getElementById('restart-btn');
            
            const gridSize = 20;
            const tileCount = canvas.width / gridSize;
            let score = 0;
            
            // Con rắn
            let snake = [
                {x: 10, y: 10}
            ];
            let velocityX = 0;
            let velocityY = 0;
            
            // Thức ăn
            let foodX = 5;
            let foodY = 5;
            
            // Game state
            let gameOver = false;
            let gamePaused = false;
            let gameSpeed = 150; // ms
            let gameLoop;
            
            // Hàm vẽ game
            function drawGame() {
                // Xóa màn hình
                ctx.fillStyle = '#ecf0f1';
                ctx.fillRect(0, 0, canvas.width, canvas.height);
                
                // Vẽ thức ăn
                ctx.fillStyle = '#e74c3c';
                ctx.fillRect(foodX * gridSize, foodY * gridSize, gridSize, gridSize);
                
                // Vẽ rắn
                ctx.fillStyle = '#2c3e50';
                snake.forEach(segment => {
                    ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
                });
                
                // Vẽ đầu rắn khác màu
                if (snake.length > 0) {
                    ctx.fillStyle = '#3498db';
                    ctx.fillRect(snake[0].x * gridSize, snake[0].y * gridSize, gridSize, gridSize);
                }
            }
            
            // Hàm di chuyển rắn
            function moveSnake() {
                if (gameOver || gamePaused) return;
                
                const head = {x: snake[0].x + velocityX, y: snake[0].y + velocityY};
                
                // Kiểm tra va chạm tường
                if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount) {
                    gameOver = true;
                    return;
                }
                
                // Kiểm tra va chạm với chính mình
                for (let i = 1; i < snake.length; i++) {
                    if (head.x === snake[i].x && head.y === snake[i].y) {
                        gameOver = true;
                        return;
                    }
                }
                
                // Thêm đầu mới
                snake.unshift(head);
                
                // Kiểm tra ăn thức ăn
                if (head.x === foodX && head.y === foodY) {
                    score += 10;
                    scoreDisplay.textContent = `Điểm: ${score}`;
                    placeFood();
                } else {
                    // Nếu không ăn thì xóa đuôi
                    snake.pop();
                }
            }
            
            // Đặt thức ăn ở vị trí ngẫu nhiên
            function placeFood() {
                let validPosition = false;
                
                while (!validPosition) {
                    foodX = Math.floor(Math.random() * tileCount);
                    foodY = Math.floor(Math.random() * tileCount);
                    
                    validPosition = true;
                    // Kiểm tra không trùng với thân rắn
                    for (let segment of snake) {
                        if (segment.x === foodX && segment.y === foodY) {
                            validPosition = false;
                            break;
                        }
                    }
                }
            }
            
            // Xử lý sự kiện bàn phím
            function handleKeyDown(e) {
                if (gameOver) return;
                
                switch (e.key) {
                    case 'ArrowUp':
                    case 'w':
                    case 'W':
                        if (velocityY !== 1) {
                            velocityX = 0;
                            velocityY = -1;
                        }
                        break;
                    case 'ArrowDown':
                    case 's':
                    case 'S':
                        if (velocityY !== -1) {
                            velocityX = 0;
                            velocityY = 1;
                        }
                        break;
                    case 'ArrowLeft':
                    case 'a':
                    case 'A':
                        if (velocityX !== 1) {
                            velocityX = -1;
                            velocityY = 0;
                        }
                        break;
                    case 'ArrowRight':
                    case 'd':
                    case 'D':
                        if (velocityX !== -1) {
                            velocityX = 1;
                            velocityY = 0;
                        }
                        break;
                    case ' ':
                        gamePaused = !gamePaused;
                        break;
                }
            }
            
            // Hàm khởi tạo game
            function initGame() {
                snake = [{x: 10, y: 10}];
                velocityX = 0;
                velocityY = 0;
                score = 0;
                scoreDisplay.textContent = `Điểm: ${score}`;
                gameOver = false;
                gamePaused = false;
                placeFood();
                gameOverDisplay.style.display = 'none';
                
                if (gameLoop) clearInterval(gameLoop);
                gameLoop = setInterval(update, gameSpeed);
            }
            
            // Hàm cập nhật game
            function update() {
                if (gameOver) {
                    clearInterval(gameLoop);
                    finalScoreDisplay.textContent = `Điểm số: ${score}`;
                    gameOverDisplay.style.display = 'block';
                    return;
                }
                
                if (!gamePaused) {
                    moveSnake();
                    drawGame();
                }
            }
            
            // Sự kiện nút chơi lại
            restartBtn.addEventListener('click', initGame);
            
            // Sự kiện bàn phím
            document.addEventListener('keydown', handleKeyDown);
            
            // Bắt đầu game
            initGame();
        });
    </script>
</body>
</html>
